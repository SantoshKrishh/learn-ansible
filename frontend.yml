- name:: Setup Frontend
  hosts: all
  become: yes
  tasks:
      - name: Install Nginx Server
        ansible.builtin.yum:
         name: nginx
         state: latest

      - name: Remove Directory
        ansible.builtin.file:
         path: /usr/share/nginx/html
         state: absent

      - name: Create Directory
        ansible.builtin.file:
         path: /usr/share/nginx/html
         state: directory

      - name: Download and Unzip Frontend Content
        ansible.builtin.unarchive:
         src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
         dest: /usr/share/nginx/html
         remote_src: yes

      - name: Copy Nginx Roboshop Config
        ansible.builtin.copy:
         src: /home/centos/Shop-shell/roboshop.conf
         dest: /etc/nginx/default.d/roboshop.conf

      - name: Start Nginx Service
        ansible.builtin.service:
         name: nginx
         state: restarted
         enabled: yes








#       echo -e "\e[33m>>>>>>Install Nginx<<<<<<<<\e[0m"
# dnf install nginx -y &>>/tmp/frontend-roboshop.log
# source common.sh

# echo -e "\e[33m>>>>>>>removing Web server content<<<<<<<\e[0m"
# rm -rf /usr/share/nginx/html/* &>>/tmp/frontend-roboshop.log
# echo -e "${color} >>>>>>Install Nginx<<<<<<<< ${nocolor}"
# dnf install nginx -y &>>$log_file

# echo -e "\e[33m>>>>>>Downloading Roboshop webserver content<<<<<<<\e[0m"
# curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip &>>/tmp/frontend-roboshop.log
# echo -e "${color} >>>>>>>removing Web server content<<<<<<< ${nocolor}"
# rm -rf /usr/share/nginx/html/* &>>$log_file

# echo -e "\e[33m>>>>>>Unzipping webserver content <<<<<<<\e[0m"
# cd /usr/share/nginx/html &>>/tmp/frontend-roboshop.log
# unzip /tmp/frontend.zip &>>/tmp/frontend-roboshop.log
# echo -e "${color} >>>>>>Downloading roboshop.log webserver content<<<<<<< ${nocolor}"
# curl -o /tmp/frontend.zip https://roboshop.log-artifacts.s3.amazonaws.com/frontend.zip &>>$log_file

# echo -e "\e[33m>>>>>>>copying conf file<<<<<<<<\e[0m"
# cp /home/centos/Shop-shell/roboshop.conf /etc/nginx/default.d/roboshop.conf
# echo -e "${color} >>>>>>Unzipping webserver content <<<<<<< ${nocolor}"
# cd /usr/share/nginx/html &>>$log_file
# unzip /tmp/frontend.zip &>>$log_file

# echo -e "\e[33m>>>>>>>>>>>>>>>>>Restarting Nginx Service<<<<<<<<<<<<<<<<<<<\e[0m"
# systemctl enable nginx &>>/tmp/frontend-roboshop.log
# systemctl restart nginx &>>/tmp/frontend-roboshop.log
# echo -e "${color} >>>>>>>copying conf file<<<<<<<< ${nocolor}"
# cp /home/centos/Shop-shell/roboshop.log.conf /etc/nginx/default.d/roboshop.log.conf

# #echo -e "\e[33m\e[0m"
# echo -e "${color} >>>>>>>>>>>>>>>>>Restarting Nginx Service<<<<<<<<<<<<<<<<<<< ${nocolor}"
# systemctl enable nginx &>>$log_file
# systemctl restart nginx &>>$log_file
# #echo -e "${color}  ${nocolor}"
# â€ŽMongoDB.sh
# +13
# -10
# Original file line number	Diff line number	Diff line change
# @@ -1,14 +1,17 @@
# #echo -e "\e[33m>>>>><<<<<\e[0m"
# #echo -e "${color} >>>>><<<<< ${nocolor}"

# echo -e "\e[33m>>>>> copying mongodb repo file <<<<<\e[0m"
# cp /home/centos/Shop-shell/mongo.repo /etc/yum.repos.d/mongo.repo &>>/tmp/mongodb-roboshop.log
# source common.sh

# echo -e "\e[33m>>>>> Install MongoDB <<<<<\e[0m"
# dnf install mongodb-org -y &>>/tmp/mongodb-roboshop.log

# echo -e "\e[33m>>>>> update mongodb listen address <<<<<\e[0m"
# sed -i -e 's/127.0.0.1/0.0.0.0/' /etc/mongod.conf &>>/tmp/mongodb-roboshop.log
# echo -e "${color} >>>>> copying mongodb repo file <<<<< ${nocolor}"
# cp /home/centos/Shop-shell/mongo.repo /etc/yum.repos.d/mongo.repo &>>$log_file

# echo -e "\e[33m>>>>> Start & Enable MongoDB Service <<<<<\e[0m"
# systemctl enable mongod &>>/tmp/mongodb-roboshop.log
# systemctl restart mongod &>>/tmp/mongodb-roboshop.log
# echo -e "${color} >>>>> Install MongoDB <<<<< ${nocolor}"
# dnf install mongodb-org -y &>>$log_file
# echo -e "${color} >>>>> update mongodb listen address <<<<< ${nocolor}"
# sed -i -e 's/127.0.0.1/0.0.0.0/' /etc/mongod.conf &>>$log_file
# echo -e "${color} >>>>> Start & Enable MongoDB Service <<<<< ${nocolor}"
# systemctl enable mongod &>>$log_file
# systemctl restart mongod &>>$log_file